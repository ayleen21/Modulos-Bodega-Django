#PASO 1 CREAR DockerFile
# syntax=docker/dockerfile:1
FROM python:3.9
ENV PYTHONUNBUFFERED 1
RUN mkdir /my_app_django_dir
WORKDIR /my_app_django_dir
ADD requirements.txt /my_app_django_dir/
#RUN pip install -- upgrade pip && pip install -r requirements.txt
RUN pip install -r requirements.txt
ADD . /my_app_django_dir/

#PASO 2 CREAR docker-compose.yml
version: '3.5'
services:
  ges_db:
    image: mysql:5.7
    ports:
     - "33306:3306"
    environment:
      MYSQL_DATABASE: dba_ges
      MYSQL_USER: user_ges
      MYSQL_PASSWORD: 97Emc@l1
      MYSQL_ROOT_PASSWORD: 97Emc@l1
    volumes:
      - ./data_mysql:/var/lib/mysql
  ges_django:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/my_app_django_dir
    ports:
      - "8001:8000"
    depends_on:
      - ges_db


#PASO 3 CREAR PROYECTO
sudo docker-compose run ges_django django-admin startproject gestionservicios .

#PASO  4 SUBIR 
docker-compose up
#SUBIR DOCKER Y QUE QUEDE EN SEGUNDO PLANO
docker-compose up -d

#SI AGREGO ALGO EN requirements.txt DEBO HACER UN BUILD
docker-compose build

#realizar migrations
sudo docker-compose run --rm ges_django python manage.py makemigrations
#realizar migrations
sudo docker-compose run --rm ges_django python manage.py migrate
#CREAR SUPER USUARIO
sudo docker-compose run --rm ges_django python manage.py createsuperuser
#CREAR APP
sudo docker-compose run --rm ges_django python manage.py startapp erp

#EJECTUAR PRUEBAS DESDE EL ARCHIVO DE TESTS.PY PARA CADA APP
sudo docker-compose run --rm ges_django python manage.py test app/erp


