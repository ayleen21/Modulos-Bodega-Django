# Generated by Django 3.2.5 on 2022-03-08 22:20

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('warehouse', '0002_auto_20220308_2220'),
        ('erp', '0011_auto_20220308_2141'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalClient',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(choices=[(True, 'Activo'), (False, 'Inactivo')], default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creacion')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificacion')),
                ('delete_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Eliminacion')),
                ('client_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Juridico')),
                ('nit_client', models.IntegerField(default=True, validators=[django.core.validators.RegexValidator(message='Numero de identificacion digitado incorrectamente verifique que no contenga letras o simbolos', regex='^([\\d]{1,5})\\s?([\\d]){5,7}$')], verbose_name='NIT/DNI')),
                ('names', models.CharField(max_length=150, validators=[django.core.validators.RegexValidator(message='Nombre juridico o natural, Verifique que este bien escrito y no contenga simbolos y numeros', regex='^[A-Za-z ]{3,50}$')], verbose_name='Nombre')),
                ('address', models.CharField(max_length=150, verbose_name='Direccion')),
                ('city', models.CharField(choices=[('Cali', 'Cali'), ('Palmira', 'Palmira'), ('Yumbo', 'Yumbo'), ('Candelaria', 'Candelaria'), ('Puerto tejada', 'Puerto tejada'), ('Jamundi', 'Jamundi')], max_length=50, verbose_name='Ciudad')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Numero telefonico digitado incorrectamente, verifique que no tenga letras ni simbolos', regex='^([\\d]{5,5})\\s?([\\d]){5,5}$')], verbose_name='Telefono')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('legal_representative', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Representante legal digitado incorrectamente, verifique que no contega numeros o simbolos', regex='^[A-Za-z ]{3,50}$')], verbose_name='Representante legal')),
                ('observations', models.CharField(blank=True, max_length=500, null=True, verbose_name='Observaciones')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Cliente',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'Venta',
                'verbose_name_plural': 'Ventas',
                'ordering': ['id'],
            },
        ),
        migrations.RemoveField(
            model_name='client',
            name='gender',
        ),
        migrations.RemoveField(
            model_name='client',
            name='nit',
        ),
        migrations.RemoveField(
            model_name='client',
            name='surnames',
        ),
        migrations.RemoveField(
            model_name='client',
            name='t_nit',
        ),
        migrations.AddField(
            model_name='client',
            name='client_type',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Juridico'),
        ),
        migrations.AddField(
            model_name='client',
            name='email',
            field=models.EmailField(default=1, max_length=254, verbose_name='Email'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='client',
            name='legal_representative',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Representante legal digitado incorrectamente, verifique que no contega numeros o simbolos', regex='^[A-Za-z ]{3,50}$')], verbose_name='Representante legal'),
        ),
        migrations.AddField(
            model_name='client',
            name='niche',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp.niche', verbose_name='Nicho'),
        ),
        migrations.AddField(
            model_name='client',
            name='nit_client',
            field=models.IntegerField(default=True, validators=[django.core.validators.RegexValidator(message='Numero de identificacion digitado incorrectamente verifique que no contenga letras o simbolos', regex='^([\\d]{1,5})\\s?([\\d]){5,7}$')], verbose_name='NIT/DNI'),
        ),
        migrations.AlterField(
            model_name='client',
            name='names',
            field=models.CharField(max_length=150, validators=[django.core.validators.RegexValidator(message='Nombre juridico o natural, Verifique que este bien escrito y no contenga simbolos y numeros', regex='^[A-Za-z ]{3,50}$')], verbose_name='Nombre'),
        ),
        migrations.AlterField(
            model_name='client',
            name='phone',
            field=models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Numero telefonico digitado incorrectamente, verifique que no tenga letras ni simbolos', regex='^([\\d]{5,5})\\s?([\\d]){5,5}$')], verbose_name='Telefono'),
        ),
        migrations.AlterField(
            model_name='niche',
            name='name',
            field=models.CharField(max_length=50, verbose_name='Nicho'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='name',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Segmento digitado incorrectamente, verifique que no contenga numeros o simbolos', regex='^[A-Za-z ]{3,500}$')], verbose_name='Segmento'),
        ),
        migrations.DeleteModel(
            name='Enterprise',
        ),
        migrations.AddField(
            model_name='sale',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp.client'),
        ),
        migrations.AddField(
            model_name='sale',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.component', verbose_name='Componente'),
        ),
        migrations.AddField(
            model_name='sale',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product', verbose_name='Producto'),
        ),
        migrations.AddField(
            model_name='sale',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.service', verbose_name='Servicio'),
        ),
        migrations.AddField(
            model_name='sale',
            name='subservice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.subservice', verbose_name='Subservicio'),
        ),
        migrations.AddField(
            model_name='historicalclient',
            name='niche',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='erp.niche', verbose_name='Nicho'),
        ),
    ]
